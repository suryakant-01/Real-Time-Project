
*TO CREATE RE-OREDER LEVEL REPORT.
************************************************************************
* Author                :  SURYAKANT PANDEY
* PROGRAM NAME          :  ZPROJECT_REPORT_RE_ORDER_LEVEL
* PACKAGE               :  ZPROGRAM_01
* T REQUEST NUMBER      :
* PROGRAM TITLE         :  RE-ORDER LEVEL PROJECT
* MODULE                :  MATERIAL MASTER
* PROGRAM TYPE          :  ABAP LIST VEIWER
* CREATED BY            :  SURYAKANT PANDEY
* CREATION DATE         :  31/01/2025
************************************************************************

REPORT ZREPORT_MM_REODER_LEVEL.


*********************************************TO CREATE LINE_TYPE STRUCTURE MARA.

TYPES : BEGIN OF LTY_MARA,
         MATNR TYPE MATNR, " Material Number
         MTART TYPE MTART, " Material Type
         MBRSH TYPE MBRSH, " Industry sector
         MATKL TYPE MATKL, " Material Group
         MEINS TYPE MEINS, " Base Unit of Measure
  END OF LTY_MARA.

**************************************************TO CREATE LINE_TYPE STRUCTURE MARC.

TYPES : BEGIN OF LTY_MARC,
         MATNR TYPE MATNR,      " Material Number
         WERKS TYPE WERKS_D,    " Plant
         EKGRP TYPE EKGRP,      " Purchasing Group
         MINBE TYPE MINBE,      " Reorder Point
         BSTMI TYPE BSTMI,      " Minimum Lot Size
  END OF LTY_MARC.

****************************************************TO CREATE LINE_TYPE STRUCTURE MARD.

TYPES : BEGIN OF LTY_MARD,
          MATNR TYPE MATNR, " Material Number
          WERKS TYPE WERKS_D, " Plant
          LGORT TYPE LGORT_D, " Storage Location
          LABST TYPE LABST, " Valuated Unrestricted-Use Stock
  END OF LTY_MARD.

***************************************************TO CREATE LINR_TYPE STRUCTURE MAKT.

TYPES: BEGIN OF LTY_MAKT,
         MATNR TYPE MATNR,
         SPRAS TYPE SPRAS,
         MAKTX TYPE MAKTX,
       END OF LTY_MAKT.

****************************************************TO CREATE LINE_TYPE STRUCTURE MBEW.

TYPES : BEGIN OF LTY_MBEW,
         MATNR TYPE MATNR, " Material Number
         BWKEY TYPE BWKEY, " Valuation Area
         BWTAR TYPE BWTAR_D, " Valuation Type
         STPRS TYPE STPRS, " Standard price
  END OF LTY_MBEW.



***************************************************TO CREATE IT_FINAL TABLE USING MARA, MARC, MARD, MBEW.

TYPES: BEGIN OF LTY_FINAL,
         MATNR TYPE MATNR,
         MTART TYPE MTART,
         MBRSH TYPE MBRSH,
         MATKL TYPE MATKL,
         MEINS TYPE MEINS,
         WERKS TYPE WERKS_D,
         EKGRP TYPE EKGRP,
         MINBE TYPE MINBE,
         BSTMI TYPE BSTMI,
         LGORT TYPE LGORT_D,
         LABST TYPE LABST,
         MAKTX TYPE MAKTX,
         BWKEY TYPE BWKEY,
         BWTAR TYPE BWTAR_D,
         STPRS TYPE STPRS,
       END OF LTY_FINAL.

*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_MARA FOR LTY_MARA.

   DATA : IT_MARA TYPE TABLE OF LTY_MARA.
   DATA : WA_MARA TYPE LTY_MARA.

*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_MARC FOR LTY_MARC.
   DATA : IT_MARC TYPE TABLE OF LTY_MARC.
   DATA : WA_MARC TYPE LTY_MARC.

*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_MARD FOR LTY_MARD.
   DATA : IT_MARD TYPE TABLE OF LTY_MARD.
   DATA : WA_MARD TYPE LTY_MARD.

*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_MAKT FOR LTY_MAKT.
   DATA : IT_MAKT TYPE TABLE OF LTY_MAKT.
   DATA : WA_MAKT TYPE LTY_MAKT.

*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_MBEW FOR LTY_MBEW.
   DATA : IT_MBEW TYPE TABLE OF LTY_MBEW.
   DATA : WA_MBEW TYPE LTY_MBEW.


*TO CREATE AN INTERNAL TABLE AND WORK-AREA TO IT_FINAL FOR LTY_FINAL.
   DATA : IT_FINAL TYPE TABLE OF LTY_FINAL.
   DATA : WA_FINAL TYPE LTY_FINAL.

*TO CREATE AN INTERNAL TABLE IT_FCAT OF STRUCTURE SLIS_FIELDCAT_ALV.
   DATA : IT_FCAT TYPE TABLE OF SLIS_FIELDCAT_ALV.
   DATA : WA_FCAT TYPE SLIS_FIELDCAT_ALV.

* TO CREATE A VARIABLE.

DATA:F_MATNR TYPE MATNR,
     F_MTART TYPE MTART,
     F_MATKL TYPE MATKL.
DATA : V_QTY TYPE LABST.


* TO CREATE AN INPUT FIELDS INTO SELECTION SCREEN FIELD.
   PARAMETERS : P_WERKS TYPE WERKS_D.
*TO CREATE RANGE OF INPUT FIELDS ONTO SELECTIION-SCREEN
   SELECT-OPTIONS : S_MATNR FOR F_MATNR,
                    S_MTART FOR F_MTART,
                    S_MATKL FOR F_MATKL.


* RADIO BUTTON CREATION ON SELECTION SCREEN FOR ALL MATERIAL AND RE-ORDER-LEVEL.

SELECTION-SCREEN : BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
  PARAMETERS : R1 RADIOBUTTON GROUP GRP1,
               R2 RADIOBUTTON GROUP GRP1 DEFAULT 'X'.
  SELECTION-SCREEN END OF BLOCK B1.


AT SELECTION-SCREEN.
  PERFORM VALIDATE_FIELDS.

START-OF-SELECTION.
  PERFORM GET_DATA.
  PERFORM PROCESS_DATA.
  PERFORM BUILD_FIELDCAT.
  PERFORM GET_DISPLAY.
*  WRITE 'HI WORLD'.

*&---------------------------------------------------------------------*
*&      Form  VALIDATE_FIELDS
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM VALIDATE_FIELDS.

IF P_WERKS IS NOT INITIAL.
    SELECT SINGLE WERKS FROM T001W INTO @DATA(V_WERKS) WHERE WERKS = @P_WERKS.
    IF SY-SUBRC <> 0.
      MESSAGE ' INVALID PLANT' TYPE 'E'.
    ENDIF.
  ENDIF.

  IF S_MATNR[] IS NOT INITIAL.
    SELECT SINGLE MATNR FROM MARA INTO @DATA(V_MATNR) WHERE MATNR IN @S_MATNR.
    IF SY-SUBRC <> 0.
      MESSAGE 'INVALLID MATERIAL RANGE ' TYPE 'E'.
    ENDIF.
  ENDIF.

  IF S_MTART[] IS NOT INITIAL.
    SELECT SINGLE MTART FROM T134 INTO @DATA(V_MTART) WHERE MTART IN @S_MTART.
    IF SY-SUBRC <> 0.
      MESSAGE 'INVALID MATERIAL TYPE' TYPE 'E'.
    ENDIF.
  ENDIF.

  IF S_MATKL[] IS NOT INITIAL.
    SELECT SINGLE MATKL FROM T023 INTO @DATA(V_MATKL) WHERE MATKL IN @S_MATKL.
    IF SY-SUBRC <> 0.
      MESSAGE 'INVALID MATERIAL GROUP' TYPE 'E'.
    ENDIF.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DATA .

*TO GET MARA DETAILS FROM MARA INTO INTERNAL TABLE IT_MARA.
  SELECT MATNR MTART MBRSH MATKL MEINS FROM MARA INTO TABLE IT_MARA
    WHERE MATNR IN S_MATNR AND MTART IN S_MTART AND MATKL IN S_MATKL.
    IF SY-SUBRC = 0.
      IF IT_MARA IS NOT INITIAL.
*TO GET PLANT DATA FROM MARC
    SELECT MATNR WERKS EKGRP MINBE BSTMI FROM MARC INTO TABLE IT_MARC
      FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR AND WERKS = P_WERKS.

*TO GET MATERIAL DESCRIPTION FROM MAKT.
    SELECT MATNR SPRAS MAKTX FROM MAKT INTO TABLE IT_MAKT
      FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR AND SPRAS = SY-LANGU.
      ENDIF.
        ENDIF.

IF IT_MARC IS NOT INITIAL.
* TO GET STORAGE LOCATION FROM MARD.
  SELECT MATNR WERKS LGORT LABST FROM MARD INTO TABLE IT_MARD
    FOR ALL ENTRIES IN IT_MARC WHERE MATNR = IT_MARC-MATNR AND WERKS = IT_MARC-WERKS.
    ENDIF.

IF IT_MARC IS NOT INITIAL.
*TO GET MATERIAL VALUATION FROM MBEW
  SELECT MATNR BWKEY BWTAR STPRS FROM MBEW INTO TABLE IT_MBEW
    FOR ALL ENTRIES IN IT_MARC WHERE MATNR = IT_MARC-MATNR AND BWKEY = IT_MARC-WERKS.
    ENDIF.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  PROCESS_DATA
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM PROCESS_DATA .

SORT IT_MARA.
SORT IT_MARC.
SORT IT_MBEW.
SORT IT_MAKT.

LOOP AT IT_MARC INTO WA_MARC.

    WA_FINAL-MATNR = WA_MARC-MATNR.
    WA_FINAL-WERKS = WA_MARC-WERKS.
    WA_FINAL-EKGRP = WA_MARC-EKGRP.
    WA_FINAL-MINBE = WA_MARC-MINBE.
    WA_FINAL-BSTMI = WA_MARC-BSTMI.

*TO READ MATERIAL DATA FROM IT_MARA.
    READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_MARC-MATNR BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_FINAL-MTART = WA_MARA-MTART.
      WA_FINAL-MBRSH = WA_MARA-MBRSH.
      WA_FINAL-MATKL = WA_MARA-MATKL.
      WA_FINAL-MEINS = WA_MARA-MEINS.
      ENDIF.

*TO READ MATERIAL DESCRIPTION FROM IT_MAKT.
    READ TABLE IT_MAKT INTO WA_MAKT WITH KEY MATNR = WA_MARC-MATNR BINARY SEARCH.
     IF SY-SUBRC = 0.
       WA_FINAL-MAKTX = WA_MAKT-MAKTX.
     ENDIF.

*TO READ MATERIAL VALUATION FROM INTERNAL TABLE IT_MBEW.
    READ TABLE IT_MBEW INTO WA_MBEW WITH KEY MATNR = WA_MARC-MATNR BWKEY = WA_MARC-WERKS BINARY SEARCH.
    IF SY-SUBRC = 0.
      WA_FINAL-BWKEY = WA_MBEW-BWKEY.
      WA_FINAL-BWTAR = WA_MBEW-BWTAR.
      WA_FINAL-STPRS = WA_MBEW-STPRS.
    ENDIF.


LOOP AT IT_MARD INTO WA_MARD WHERE MATNR = WA_MARC-MATNR AND WERKS = WA_MARC-WERKS.
     V_QTY = V_QTY + WA_MARD-LABST.
     ENDLOOP.
     WA_FINAL-LABST = V_QTY.

     IF R1 = 'X'.
       APPEND WA_FINAL TO IT_FINAL.
       ELSEIF R2 = 'X'.
         IF WA_FINAL-LABST < WA_FINAL-MINBE.
           APPEND WA_FINAL TO IT_FINAL.
           ENDIF.
            ENDIF.

     CLEAR:WA_FINAL,WA_MARA,WA_MARC,WA_MARD,WA_MAKT,WA_MBEW.

       ENDLOOP.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  BUILD_FIELDCAT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM BUILD_FIELDCAT .

*COLUMN POSITION 1: MATNR : MATERIAL NUMBER

  WA_FCAT-COL_POS     = 1. " PCOLUMN POSITION
  WA_FCAT-FIELDNAME  = 'MATNR'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-KEY = 'X'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-NO_ZERO = 'X'.
  WA_FCAT-EMPHASIZE = 'C101'.
  WA_FCAT-FIX_COLUMN = 'X'.
  WA_FCAT-SELTEXT_M = 'MATERIAL'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 2: MTART : TYPE OF MATERIAL.

  WA_FCAT-COL_POS     = 2.
  WA_FCAT-FIELDNAME  = 'MTART'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C401'.
  WA_FCAT-SELTEXT_M = 'MTRL TYPE'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 3: MBRSH : INDUSTRY SECTOR.

  WA_FCAT-COL_POS     = 3.
  WA_FCAT-FIELDNAME  = 'MBRSH'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C501'.
  WA_FCAT-SELTEXT_M = 'INDUSTRY SECTOR'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 4: MATKL : MATERIAL GROUP.

  WA_FCAT-COL_POS     = 4.
  WA_FCAT-FIELDNAME  = 'MATKL'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C601'.
  WA_FCAT-SELTEXT_M = 'MATERIAL GROUP'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.


*COLUMN POSITION 5: MEINS : UNIT OF MEASUREMENT OF MATERIAL.

  WA_FCAT-COL_POS     = 5.
  WA_FCAT-FIELDNAME  = 'MEINS'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'UNIT OF MEASUREMENT'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 6: WERKS : PLANT.

  WA_FCAT-COL_POS     = 6.
  WA_FCAT-FIELDNAME  = 'WERKS'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'WERKS'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 7: EKGRP : PURCHASING GROUP.

  WA_FCAT-COL_POS     = 7.
  WA_FCAT-FIELDNAME  = 'EKGRP'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'PURCHASE GROUP'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 8: MINBE : RE-ORDER QTY.

  WA_FCAT-COL_POS     = 8.
  WA_FCAT-FIELDNAME  = 'MINBE'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'REORDERQTY'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 9: BSTMI : .MIN ORDER QTY

  WA_FCAT-COL_POS     = 9.
  WA_FCAT-FIELDNAME  = 'BSTMI'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'MIN ORDER QTY'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 10: LGORT : STORAGE LOCATION

  WA_FCAT-COL_POS     = 10.
  WA_FCAT-FIELDNAME  = 'LGORT'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'STORAGE LOC.'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 11: LABST: QUANTITY

  WA_FCAT-COL_POS     = 11.
  WA_FCAT-FIELDNAME  = 'LABST'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'QUANTITY'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 12: MAKTX : MATERIAL DESCRIPTION

  WA_FCAT-COL_POS     = 12.
  WA_FCAT-FIELDNAME  = 'MAKTX'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'DESCRIPTION'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 13: BWKEY: VALUATION AREA

  WA_FCAT-COL_POS     = 13.
  WA_FCAT-FIELDNAME  = 'BWKEY'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'VALUATION AREA'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 14: BWTAR: VALUATION RECORD

  WA_FCAT-COL_POS     = 14.
  WA_FCAT-FIELDNAME  = 'BWTAR'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'VALUATION RECORD'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.

*COLUMN POSITION 15: STPRS : STANDARD PRICE

  WA_FCAT-COL_POS     = 15.
  WA_FCAT-FIELDNAME  = 'STPRS'.
  WA_FCAT-TABNAME = 'IT_FINAL'.
  WA_FCAT-JUST = 'C'.
  WA_FCAT-EMPHASIZE = 'C701'.
  WA_FCAT-SELTEXT_M = 'STANDARD PRICE'.
  APPEND WA_FCAT TO IT_FCAT.
  CLEAR WA_FCAT.


ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DISPLAY
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GET_DISPLAY .
CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
 EXPORTING

   I_CALLBACK_PROGRAM                = SY-REPID
   I_GRID_TITLE                      = ' MATERIAL MASTER DATA REORDER LEVEL '
   IT_FIELDCAT                       = IT_FCAT

  TABLES
    T_OUTTAB                          = IT_FINAL
 EXCEPTIONS
   PROGRAM_ERROR                     = 1
   OTHERS                            = 2
          .
IF SY-SUBRC <> 0.
* Implement suitable error handling here
ENDIF.

ENDFORM.
